<% include header %>
<link rel="stylesheet" href="stylesheets/performance.css">
<div class="container-fluid">
	<div class="row-fluid">
		<div class="span2">
			<% include nav %>
		</div>
		<!--/span-->
		<section class="span10 container">
			<h3><%= type !== 'mobile' ? 'PC' : 'Mobile'%> Performance</h3>
			<div class="clearfix">
				<div class="btn-toolbar clearfix">
					<select id="page-type" class="pull-left"></select>
					<select id="page-template" class="pull-left" style="display: none;"></select>

					<div id="date-range" class="pull-right">
						<label class="pull-left">From: 
							<input id="date-start" type="text" class="input-small" value="01/01/2013" />
						</label>
						<label class="pull-left">To:
							<input id="date-end" type="text" class="input-small" value="01/05/2013" />
						</label>
						<button class="btn">Apply</button>
					</div>

					<div id="date-unit" class="btn-group pull-right" data-toggle="buttons-radio">
						<button class="btn active" value="day">Day</button>
						<button class="btn" value="week">Week</button>
						<button class="btn" value="month">Month</button>
					</div>
				</div>

				<div id="data-types" class="btn-group pull-left hide" data-toggle="buttons-checkbox">
					<button class="btn active">Window Load</button>
					<button class="btn active">Dom Ready</button>
					<button class="btn active">Network Latency</button>
				</div>

				<div class="btn-group pull-left" data-toggle="buttons-checkbox">
					<button id="data-ab" class="btn btn-success">A/B Testing</button>
				</div>

				<button id="switchView" class="btn btn-link pull-right" title="Switch View"><i class="icon-retweet"></i> Switch View</button>
			</div>

			<div id="viewMask">
				<div id="bothViewsWrapper">
					<div id="plot-view" class="viewWrapper">
						<div id="all-view"></div>
						<div id="load-view"></div>
						<div id="domReady-view"></div>
						<div id="networkLatency-view"></div>
					</div>

					<div class="viewWrapper" style="display: none;">
						
							<dl class="dl-horizontal data-dimension pull-left">
								<dt>Location:</dt>
								<dd>
									<ul class="options">
										<li><a href="#">Country</a></li>
									</ul>
								</dd>
							</dl>

							<dl class="dl-horizontal data-dimension pull-left">
								<dt>Browser:</dt>
								<dd>
									<ul class="options">
										<li><a href="#">Browser</a></li>
										<li><a href="#">Browser &amp; Version</a></li>
									</ul>
								</dd>
							</dl>

						<table id="table-view" class="table table-striped">
							<thead>
								<tr>
									<th><button class="btn btn-link">All plot view</button></th>
									<th>Country</th>
									<th>Browser</th>
									<th><a href="#">Network Latency</a></th>
									<th><a href="#">Dom Ready</a></th>
									<th><a href="#">Window Load</a></th>
									<th><a href="#">Visits <i class="icon-arrow-down"></i></a></th>
									<th></th>
								</tr>
							</thead>
							<tbody>
								<tr>
									<td><button class="btn btn-link">plot view</button></td>
									<td><a href="#">United States</a></td>
									<td><a href="#">Chrome</a></td>
									<td>0.5</td>
									<td>5.2</td>
									<td>8.6</td>
									<td>23432</td>
									<td>
										<div style="width: 35px;" class="per-bar"></div>
										<span>35%</span>
									</td>
								</tr>
								<tr>
									<td><button class="btn btn-link">plot view</button></td>
									<td><a href="#">France</a></td>
									<td><a href="#">Firefox</a></td>
									<td>0.5</td>
									<td>5.2</td>
									<td>8.6</td>
									<td>23432</td>
									<td>
										<div style="width: 25px;" class="per-bar"></div>
										<span>25%</span>
									</td>
								</tr>
								<tr>
									<td><button class="btn btn-link">plot view</button></td>
									<td><a href="#">United Kingdom</a></td>
									<td><a href="#">Chrome</a></td>
									<td>0.5</td>
									<td>5.2</td>
									<td>8.6</td>
									<td>23432</td>
									<td>
										<div style="width: 10px;" class="per-bar"></div>
										<span>10%</span>
									</td>
								</tr>
								<tr>
									<td><button class="btn btn-link">plot view</button></td>
									<td><a href="#">Germany</a></td>
									<td><a href="#">Chrome</a></td>
									<td>0.5</td>
									<td>5.2</td>
									<td>8.6</td>
									<td>23432</td>
									<td>
										<div style="width: 5px;" class="per-bar"></div>
										<span>5%</span>
									</td>
								</tr>
							</tbody>
						</table>
						<!-- div class="pagination pagination-right">
							<ul>
								<li class="disabled"><a href="#">&laquo;</a></li>
								<li class="active"><a href="#">1</a></li>
								<li><a href="#">2</a></li>
								<li><a href="#">3</a></li>
								<li><a href="#">4</a></li>
								<li><a href="#">5</a></li>
								<li><a href="#">&raquo;</a></li>
							</ul>
						</div -->
					</div>
				</div>
			</div>
			<!--/row-->
			<div id="loadMask" class="hide">
				<div class="meter animate">
					<span style="width: 0"><span></span></span>
				</div>
			</div>
		</section>
		<!--/span-->
	</div>
	<!--/row-->
	<hr>
	<footer>
	<p>
		&copy; Lightinthebox.com 2012
	</p>
	</footer>
</div>
<!--/.fluid-container-->
<!-- Le javascript
    ================================================== -->
<!-- Placed at the end of the document so the pages load faster -->
<link rel="stylesheet" href="//ajax.googleapis.com/ajax/libs/jqueryui/1.9.2/themes/base/jquery-ui.css" />
<script src="//ajax.googleapis.com/ajax/libs/jquery/1.8.3/jquery.min.js"></script>
<script src="javascripts/jquery.cookie.js"></script>
<script src="//ajax.googleapis.com/ajax/libs/jqueryui/1.9.2/jquery-ui.min.js"></script>
<script src="bootstrap/js/bootstrap.js"></script>
<script src="Highcharts-2.3.3/highcharts.js"></script>
<script src="javascripts/performance.js"></script>
<script src="javascripts/<%= type === 'mobile' ? 'mobile_performance_config.js' : 'pc_performance_config.js' %>"></script>

<script>
var abtags = ['ALL'],
	METRICS = {'load': 'Window Load', 'domReady': 'Dom Ready', 'networkLatency': 'Network Latency'},
	charts = {};

$('#page-type').html(config.pageTypes);

// Set query.cookie global options
$.cookie.json = true;
$.cookie.defaults = {path: '/'};

// Init cookies
// if ($.cookie('browser') == null) {
	$.cookie('browser', 'all');
// }
// if ($.cookie('country') == null) {
	$.cookie('country', 'all');
// }

$('#date-start, #date-end').datepicker();
var today = new Date();
today.setDate(today.getDate() - 2);
$('#date-end').val( ('0'+(today.getMonth()+1)).slice(-2) + '/' + ('0' + today.getDate()).slice(-2) + '/' + today.getFullYear());
today.setDate(today.getDate() - 15);
$('#date-start').val( ('0'+(today.getMonth()+1)).slice(-2) + '/' + ('0' + today.getDate()).slice(-2) + '/' + today.getFullYear());

function acquireData(options, success) {
	var startDate = new Date($('#date-start').val()),
		endDate = new Date($('#date-end').val()),
		pageType = $('#page-type').val(),
		pageTemplate = $('#page-template').is(':visible') ? ('-'+$('#page-template').val()) : '';
	options = $.extend(
		{
			startdate: '' + startDate.getFullYear() + ('0'+(startDate.getMonth()+1)).slice(-2) + ('0' + startDate.getDate()).slice(-2),
			enddate: '' + endDate.getFullYear() + ('0'+(endDate.getMonth()+1)).slice(-2) + ('0' + endDate.getDate()).slice(-2),
			dateunit: $('#date-unit > .active').val(),
			site: pageType.substring(0, pageType.indexOf('_')),
			page: pageType.substring(pageType.indexOf('_') + 1) + pageTemplate,
			browser: $.cookie('browser'),
			country: $.cookie('country')
		}, options
	);
	<%- type === 'mobile' ? 'options.browser = "m_" + options.browser' : '' %>
	<%- type === 'mobile' ? 'options.page = "m_" + options.page' : '' %>
	<%- type === 'mobile' ? 'options.site = "m_" + options.site' : '' %>
	var allData = {};
	$.each(abtags, function(i, abtag) {
		requirePerformanceData($.extend({'abtag': abtag}, options), function(data) {
			if (data == null || typeof(data.length) == 'undefined' || data.length == 0) {
				alert('Invalid data acquired.');
				return false;
			}
			allData[abtag] = data;
			var j = 0;
			for (; j<abtags.length; j++) {
				if (!allData[abtags[j]])
					break;
			}
			if (j === abtags.length) {
				success(allData);
			}
		}, function() {
			alert('Failed acquiring data.');
		});
	})
}

var ONE_DAY = 24 * 3600 * 1000,
	EIGHT_HOURS = 8 * 3600 * 1000,
	// countries full name for displaying
	country_names = {'fr':'France', 'us':'United States', 'it':'Italy', 'es':'Spain', 'gb':'United Kingdom', 'br':'Brazil', 'dk':'Denmark', 'de':'Germany', 'nl':'Netherlands', 'no':'Norway', 'au':'Australia', 'be':'Belgium', 'se':'Sweden', 'ca':'Canada', 'ru':'Russian Federation', 'ch':'Switzerland', 'ie':'Ireland', 'at':'Austria', 'pt':'Portugal', 'gr':'Greece'};

function drawPlot(options, done) {
	acquireData(options, function(allData) {
		if (options && options['browser & version']) {
			$.cookie('browser', options['browser & version']);
		} else if (options && options.browser) {
			$.cookie('browser', options.browser);
		}
		if (options && options.country) {
			$.cookie('country', options.country);
		}

		if (abtags.length > 1) {
			$.each(METRICS, function(metric) {
				var series = [],
					data = allData[abtags[0]], i = 0;
				for (; i < data.length; i++) {
					var date = (data[i].date+'').split('');
					date.splice(6, 0, '/');
					date.splice(4, 0, '/');
					var j = 0;
					for (;j < abtags.length; j++) {
						if (i === 0) {
							series.push({name: abtags[j], data: []});
						}
						series[j].data.push({x: new Date(date.join('')).getTime() + EIGHT_HOURS, y: allData[abtags[j]][i][metric]});
					}
				}

				if (charts[metric]) {
					charts[metric].destroy();
				}
				charts[metric] = new Highcharts.Chart({
					chart: {
						renderTo: metric + '-view',
						type: 'line'
					},
					title: {
						text: METRICS[metric],
					},
					subtitle: {
						text: (($.cookie('browser') !== 'all') ? ('browser:' + ($.cookie('browser').indexOf('all') === -1 ? $.cookie('browser') : $.cookie('browser').replace('-all', '') )+' ') : '') +
								(($.cookie('country') !== 'all') ? ('country:' + country_names[$.cookie('country')]) : ''),
		            style: {
		                color: '#FF0000'
		            }
					},
					xAxis: {
						type: 'datetime',
						minTickInterval: ONE_DAY
					},
					yAxis: {
						title: {
							text: 'Performance Timing'
						},
						labels: {
							formatter: function () {
								return this.value + 'ms';
							}
						}
					},
					plotOptions: {
						line: {
							//stacking: 'normal',
							marker: {
								//enabled: false,
								//symbol: 'circle',
								//radius: 2
							}
						}
					},
					series: series
				});
			});
		} else {
			var series = [],
				data = allData[abtags[0]], i = 0;
			for (; i < data.length; i++) {
				var date = (data[i].date+'').split('');
				date.splice(6, 0, '/');
				date.splice(4, 0, '/');
				var j = 0;
				$.each(METRICS, function(metric) {
					if (i === 0) {
						series.push({name: METRICS[metric], data: []});
					}
					series[j++].data.push({x: new Date(date.join('')).getTime() + EIGHT_HOURS, y: data[i][metric]});
				});
			}

			if (charts['all']) {
				charts['all'].destroy();
			}
			charts['all'] = new Highcharts.Chart({
				chart: {
					renderTo: 'all-view',
					type: 'area'
				},
				title: {
					text: 'FrontEnd Performance',
				},
				subtitle: {
					text: (($.cookie('browser') !== 'all') ? ('browser:' + ($.cookie('browser').indexOf('all') === -1 ? $.cookie('browser') : $.cookie('browser').replace('-all', '') )+' ') : '') +
							(($.cookie('country') !== 'all') ? ('country:' + country_names[$.cookie('country')]) : ''),
	            style: {
	                color: '#FF0000'
	            }
				},
				xAxis: {
					type: 'datetime',
					minTickInterval: ONE_DAY
				},
				yAxis: {
					title: {
						text: 'Performance Timing'
					},
					labels: {
						formatter: function () {
							return this.value + 'ms';
						}
					}
				},
				plotOptions: {
					area: {
						//stacking: 'normal',
						marker: {
							enabled: false,
							//symbol: 'circle',
							//radius: 2
						}
					}
				},
				series: series
			});
		}	
		if (done) {
			done.call();
		}
	});
};

drawPlot({}, switchToPlotView);

(function drawTable() {
	function combineAB(data) {
		var result = $.extend({}, data[abtags[0]][0]),
			i = 1;
		for (; i < abtags.length; i++) {
			$.each(METRICS, function(metric) {
				result[metric] += ' / ' + data[abtags[i]][0][metric];
			});
		}
		return result;
	}
	var dataGenerator = {
		getData: function(dims) {
			var data = new Array(), result = new Array(),
				i = 0, j = 0, k = 0;
			if (dims && dims.length > 0) {
				data.push(new Object());
				for (; i < dims.length; i++) {
					var temp = new Array();
					for (j = 0; j < config.dimensions[dims[i].toLowerCase()].length; j++) {
						for (k = 0; k < data.length; k++) {
							var obj = new Object();
							if (dims[i].toLowerCase() === 'browser & version') {
								obj['browser'] = config.dimensions[dims[i].toLowerCase()][j];
							} else {
								obj[dims[i].toLowerCase()] = config.dimensions[dims[i].toLowerCase()][j];
							}
							temp.push($.extend(obj, data[k]));
						}
					}
					data = temp;
				}
				for (i = 0; i < data.length; i++) {
					acquireData($.extend({dateunit: 'all'}, data[i]), function(resp) {
						result.push(combineAB(resp));
						// All requires have returned.
						if (result.length === data.length) {
							toDraw(dims, result);
						}
					});
				}
			} else {
				acquireData({dateunit: 'all'}, function(resp) {
					result.push(combineAB(resp));
					toDraw(dims, result);
				});
			}
			return data;
		}
	};

	var toDraw = function(dimensions, data) {
		var allVisits = 0, m = 0;
		for (; m < data.length; m++) {
			allVisits += parseInt(data[m]['count']);
		}
		for (m = 0; m < data.length; m++) {
			data[m]['Proportion'] = Math.round(data[m]['count'] / allVisits * 100);
		}
		draw(dimensions, data);

		if ($('.viewWrapper:eq(1)').is(':visible')) {
			$('#viewMask').css({
				'height': $('.viewWrapper:eq(1)').show().height()
			});
		}
	};

	var draw = function(dimensions, data){
		var theadHtml = '<tr><th><button class="btn btn-link allPlotViewBtn">All plot view</button></th>',
			tbodyHtml = '';
		for (var m = 0; m < data.length; m++) {
			var rowHtml = '<tr><td><button class="btn btn-link plotViewBtn">plot view</button></td>';
			if (dimensions) {
				for (var i = 0; i < dimensions.length; i++) {
					if (m == 0) {
						theadHtml += '<th>' + dimensions[i] + ' <a href="#"><i class="icon-remove"></i></a></th>';
					}
					if (dimensions[i].toLowerCase() === 'country') {
						rowHtml += '<td><em data-value="' + data[m][dimensions[i].toLowerCase()] + '">' + country_names[data[m][dimensions[i].toLowerCase()]] + '</em></td>';
					} else if (dimensions[i].toLowerCase() === 'browser') {
						rowHtml += '<td><em data-value="' + data[m][dimensions[i].toLowerCase()].replace('m_', '') + '">' + data[m][dimensions[i].toLowerCase()].replace('-all', '').replace('m_', '') + '</em></td>';
					} else if (dimensions[i].toLowerCase() === 'browser & version') {
						rowHtml += '<td><em data-value="' + data[m]['browser'].replace('m_', '') + '">' + data[m]['browser'].replace('m_', '') + '</em></td>';
					}
				}
			}

			if (m == 0) {
				$.each(METRICS, function(metric) {
					theadHtml += '<th>' + METRICS[metric] + ' (ms)';
					if (abtags.length > 1) {
						theadHtml += '<br/>';
						var j = 0;
						for (;j < abtags.length; j++) {
							if (j !== 0) {
								theadHtml += ' / ';
							}
							theadHtml += abtags[j];
						}
					}
					theadHtml += '</th>';
				});
				theadHtml += '<th>Visits</th><th>Proportion</th>';
			}
			$.each(METRICS, function(metric) {
				rowHtml += '<td>' + data[m][metric] + '</td>';
			});
			rowHtml += '<td>' + data[m]['count'] + '</td>' +
						'<td><div style="width: ' + data[m]['Proportion'] + 'px;" class="per-bar"></div><span>' + data[m]['Proportion'] + '%</span></td>';

			tbodyHtml += rowHtml + '</tr>';
		}
		$('#table-view > thead').html(theadHtml + '</tr>');
		$('#table-view > tbody').html(tbodyHtml);
	};

	redrawTable = function() {
		var dimensions = new Array();
		$.each($('.data-dimension'), function() {
			$.each($('li', this), function() {
				if ($('a', this).length === 0) {
					dimensions.push($.trim($(this).text()));
				}
			});
		});

		dataGenerator.getData(dimensions);
	};

	redrawTable();
}());

// Init view masking
$('.viewWrapper').css({
	'float': 'left',
	'width': $('#plot-view').width()
});
$('#bothViewsWrapper').css({
	'position': 'absolute',
	'width': $('#plot-view').width() * 2
});
$('#viewMask').css({
	'height': $('#plot-view').height()
});

function redrawAll() {
	setTimeout(function() {
		drawPlot();
		redrawTable();
	}, 200);
}

$('#data-ab').click(function() {
	abtags = $(this).hasClass('active') ? ['ALL'] : ['ALL', 'A', 'B'];
	$.each(charts, function(key, chart) {
		if (chart) {
			chart.destroy();
			charts[key] = null;
		}
	});
	redrawTable();
	drawPlot({}, switchToPlotView);
});

$('#data-types > button, #date-range > button').click(redrawAll);
$('#page-template').live('change', redrawAll);

$('#page-type').change(function() {
	var templates = config.pageTemplates[$(this).val().substring($(this).val().indexOf('_') + 1)],
		tempId = null,
		options = '<option value="all">全部模板</option>';
	if ( typeof templates !== 'undefined' && templates !== null) {
		for (tempId in templates) {
			options += '<option value="' + tempId + '">' + templates[tempId] + '</option>';
		}
		$('#page-template').html(options).show();
	} else {
		$('#page-template').hide();
	}

	redrawAll();
});

$('#date-unit > button').click(function() {
	setTimeout(function() {
		drawPlot({}, switchToPlotView);
	}, 200);
});

$('.data-dimension li a').live('click', function() {
	if ($(this).text() === 'Browser') {
		$(this).parent().next().html('<a href="#">Browser & Version</a>');
	} else if ($(this).text() === 'Browser & Version') {
		$(this).parent().prev().html('<a href="#">Browser</a>');
	}
	$(this).parent().text($(this).text());
	setTimeout(redrawTable, 200);
	return false;
});

$('#table-view th > a').live('click', function() {
	var dimStr = $.trim($(this).parent().text());
	$('.data-dimension li').each(function() {
		if ($.trim($(this).text()) === dimStr) {
			$(this).wrapInner('<a href="#" />');
		}
	});
	setTimeout(redrawTable, 200);
	return false;
});

$('#table-view .allPlotViewBtn').live('click', function() {
	drawPlot({country: 'all', browser: 'all'}, switchToPlotView);
});

$('#table-view .plotViewBtn').live('click', function() {
	var dim = new Object(),
		dimElems = $(this).parent().siblings().children('em');
	for (var i = 0; i < dimElems.length; i++) {
		var idx = $(dimElems[i]).parents('tr').children().index($(dimElems[i]).parent());
		dim[$('#table-view > thead > tr > th:eq('+idx+')').text().toLowerCase().trim()] = $(dimElems[i]).attr('data-value');
	}
	drawPlot($.extend({'country':'all', 'browser': 'all'}, dim), switchToPlotView);
});

function switchToPlotView() {
	$('#viewMask').css({
		'height': $('.viewWrapper:eq(0)').height()
	});
	$('#bothViewsWrapper').animate({'left': 0}, 'fast', function() {
		$('.viewWrapper:eq(1)').hide();
	});
	$('#date-unit').css({'visibility': 'visible'});
}

function switchToTableView() {
	$('#viewMask').css({
		'height': $('.viewWrapper:eq(1)').show().height()
	});
	$('#bothViewsWrapper').animate({'left': - $('#bothViewsWrapper').width() / 2}, 'fast');
	$('#date-unit').css({'visibility': 'hidden'});
}

$('#switchView').click(function() {
	var curPos = $('#bothViewsWrapper').css('left');
	if (curPos === '0px' || curPos === 'auto') {
		switchToTableView();
	} else {
		switchToPlotView();
	}
});
</script>

</body>
</html>
